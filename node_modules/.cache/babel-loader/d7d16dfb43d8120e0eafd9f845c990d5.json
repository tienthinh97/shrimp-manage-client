{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thinh\\\\Desktop\\\\long\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Thinh\\\\Desktop\\\\long\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Thinh\\\\Desktop\\\\long\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Thinh\\\\Desktop\\\\long\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Thinh\\\\Desktop\\\\long\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n// import axios from 'axios'\nimport React from \"react\"; // react plugin used to create charts\n\nimport { Line, Pie } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Row, Col } from \"reactstrap\";\nimport { connect } from 'react-redux'; // core components\n\nimport { dashboard24HoursPerformanceChart, dashboardEmailStatisticsChart, dashboardNASDAQChart } from \"variables/charts.jsx\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.newValue;\n      var arr = [];\n      arr.push(data);\n      console.log(\"data:\", data);\n      arr.map(function (data) {});\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    newValue: state.sensor.newValue\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["C:/Users/Thinh/Desktop/long/src/views/Dashboard.jsx"],"names":["React","Line","Pie","Card","CardHeader","CardBody","CardFooter","CardTitle","Row","Col","connect","dashboard24HoursPerformanceChart","dashboardEmailStatisticsChart","dashboardNASDAQChart","Dashboard","data","props","newValue","arr","push","console","log","map","Component","mapStateToProps","state","sensor"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B,C,CACA;;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,SALF,EAMEC,GANF,EAOEC,GAPF,QAQO,YARP;AASA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;AACA,SACEC,gCADF,EAEEC,6BAFF,EAGEC,oBAHF,QAIO,sBAJP;;IAOMC,S;;;;;;;;;;;;;wCAGe,CAElB;;;6BAGQ;AAEP,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAxB;AACA,UAAMC,GAAG,GAAG,EAAZ;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAASJ,IAAT;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,IAArB;AACAG,MAAAA,GAAG,CAACI,GAAJ,CAAQ,UAAAP,IAAI,EAAI,CAAE,CAAlB;AACD;;;;EAfqBf,KAAK,CAACuB,S;;AAkB9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCR,IAAAA,QAAQ,EAAEQ,KAAK,CAACC,MAAN,CAAaT;AADS,GAAL;AAAA,CAA7B;;AAIA,eAAeP,OAAO,CAACc,eAAD,CAAP,CAAyBV,SAAzB,CAAf","sourcesContent":["// import axios from 'axios'\nimport React from \"react\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\nimport {connect} from 'react-redux';\n\n// core components\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\n\n\nclass Dashboard extends React.Component {\n  \n\n  componentDidMount(){\n    \n  }\n  \n\n  render() {\n    \n    const data = this.props.newValue\n    const arr = [];\n    arr.push(data)\n    console.log(\"data:\", data)\n    arr.map(data => {})\n  }\n}\n\nconst mapStateToProps = state => ({\n  newValue: state.sensor.newValue\n})\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}